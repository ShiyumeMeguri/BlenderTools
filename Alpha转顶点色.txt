import bpy

# 获取当前对象
obj = bpy.context.active_object

# 确保对象是网格类型
if obj and obj.type == 'MESH':
    print("Active object is a mesh.")
    
    # 进入对象模式
    bpy.ops.object.mode_set(mode='OBJECT')
    
    # 获取网格数据
    mesh = obj.data
    
    # 确保有顶点颜色层
    if not mesh.vertex_colors:
        print("No vertex color layers found.")
    else:
        color_layer = mesh.vertex_colors.active
        print(f"Using vertex color layer: {color_layer.name}")
        
        # 获取顶点组
        vertex_group = obj.vertex_groups.get("Alpha")
        if vertex_group is None:
            print("No vertex group named 'Alpha'")
        else:
            print(f"Found vertex group 'Alpha' with index {vertex_group.index}")

            # 遍历所有顶点颜色数据
            for poly in mesh.polygons:
                for loop_index in poly.loop_indices:
                    loop = mesh.loops[loop_index]
                    vert = mesh.vertices[loop.vertex_index]
                    
                    # 获取顶点的权重
                    weight = 0.0
                    for g in vert.groups:
                        if g.group == vertex_group.index:
                            weight = g.weight
                            break
                    
                    # 获取当前颜色
                    vertex_color = color_layer.data[loop_index].color
                    
                    # 设置顶点颜色的Alpha通道，保留原来的RGB值
                    vertex_color[3] = weight
                    print(f"Polygon {poly.index}, Loop {loop_index}: Color = {vertex_color}")
            
            # 更新网格
            mesh.update()
            print("Mesh updated.")
else:
    print("Active object is not a mesh or no active object.")
